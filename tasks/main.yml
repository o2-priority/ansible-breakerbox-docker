---

- include_vars: "{{ ansible_os_family|lower }}.yml"

- name: Set up postgresql database if specified
  include_tasks: postgres.yml
  when: breakerbox_use_postgresql_db

- name: Create breakerbox directories
  file: path="{{ item }}" state=directory
  with_items:
    - "{{ breakerbox_docker_work_dir }}"
    - "{{ breakerbox_docker_conf_dir }}"
    - "{{ breakerbox_docker_ctmpl_dir }}"

- name: Copy breakerbox dockerfile
  template:
    src:  "Dockerfile.j2"
    dest: "{{ breakerbox_docker_work_dir }}/Dockerfile"
  notify: Restart breakerbox

- name: Build breakerbox docker image
  docker_image:
    name:  breakerbox
    tag:   "{{ breakerbox_docker_version }}"
    path:  "{{ breakerbox_docker_work_dir }}"
    state: present

- name: Copy breakerbox config file
  template:
    src:  "breakerbox.yml.j2"
    dest: "{{ breakerbox_docker_conf_dir }}/breakerbox.yml"
  notify: Restart breakerbox

- name: Create consul-template template file of breakerbox instances.yml config file, with healthchecks
  template:
    src:  "instances-healthcheck.yml.ctmpl.j2"
    dest: "{{ breakerbox_docker_ctmpl_dir }}/instances.yml.ctmpl"
  when: breakerbox_docker_consul_healthchecks

- name: Create consul-template template file of breakerbox instances.yml config file, no healthchecks
  template:
    src:  "instances.yml.ctmpl.j2"
    dest: "{{ breakerbox_docker_ctmpl_dir }}/instances.yml.ctmpl"
  when: not breakerbox_docker_consul_healthchecks

- name: Render consul-template template of breakerbox instances config
  shell: >
    {{ breakerbox_consul_template_bin }} \
      -consul-addr "{{ breakerbox_docker_consul_host }}:{{ breakerbox_docker_consul_port }}" \
      -template "{{ breakerbox_docker_ctmpl_dir }}/instances.yml.ctmpl:{{ breakerbox_docker_conf_dir }}/instances.yml" \
      -once
  register: ctmpl

#- debug: var=ctmpl

- name: Create upstart config for breakerbox
  template:
    src:   breakerbox.upstart.j2
    dest:  /etc/init/breakerbox.conf
    owner: root
    group: root
    mode:  0644
  when: ansible_service_mgr == 'upstart'
  notify:
    - Restart breakerbox

- name: Create systemd service unit file for breakerbox
  template:
    src:   breakerbox.service.j2
    dest:  "{{ breakerbox_docker_systemd_units_dir }}/breakerbox.service"
    owner: root
    group: root
    mode:  0644
  when: ansible_service_mgr == 'systemd'
  notify:
    - Reload systemd
    - Restart breakerbox

- name: Disable supervisord managed breakerbox service (if exists)
  include_tasks: disable-supervisord-managed-process.yml

- name: Start breakerbox
  service: name=breakerbox enabled=yes state=started

- name: Configure firewall
  include_tasks: firewalld.yml
  when: configure_firewall